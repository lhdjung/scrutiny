% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/split-by-parens.R
\name{split_by_parens}
\alias{split_by_parens}
\title{Split columns by parentheses}
\usage{
split_by_parens(
  .data,
  ...,
  .keep = FALSE,
  .transform = FALSE,
  .sep = "parens",
  .col1 = "x",
  .col2 = "sd"
)
}
\arguments{
\item{.data}{Data frame. Only in \code{split_by_parens()}.}

\item{...}{Optionally, name columns from \code{.data}. Splitting will then be
restricted to these columns. This is useful if not all values contain
parentheses.}

\item{.keep}{Boolean. If set to \code{TRUE}, the original columns from \code{.data}
also appear in the output. Default is \code{FALSE}.}

\item{.transform}{Boolean. If set to \code{TRUE}, the output will be transformed
to be better accessible for typical follow-up tasks. Default is \code{FALSE}.}

\item{.sep}{String. What to split by. Either \code{"parens"}, \code{"brackets"}, or
\code{"braces"}. Default is \code{"parens"}.}

\item{.col1, .col2}{Strings. Endings of the two column names that result from
splitting a column. Default is \code{"x"} for \code{.col1} and \code{"sd"} for \code{.col2}.}
}
\value{
A tibble with string columns.
}
\description{
Summary statistics are often presented like \code{"2.65 (0.27)"}.
When working with tables from PDF, it can be tedious to separate values
before and inside parentheses. \code{split_by_parens()} does that automatically.
By default, it operates on all columns. Output can optionally be
transformed into a longer format by setting \code{.transform} to \code{TRUE}.
}
\examples{
# Call `split_by_parens()` on data like these:
pigs <- tibble::tribble(
  ~drone,           ~selfpilot,
  "0.09 (0.21)",    "0.19 (0.13)",
  "0.19 (0.28)",    "0.53 (0.10)",
  "0.62 (0.16)",    "0.50 (0.11)",
  "0.15 (0.35)",    "0.57 (0.16)",
)

pigs

# Basic usage:
pigs \%>\%
  split_by_parens()

# Name specific columns to only return those:
pigs \%>\%
  split_by_parens(drone)

# Pivot the data into a longer format
# by setting `.transform` to `TRUE`:
pigs \%>\%
  split_by_parens(.transform = TRUE)

# Choose different column names or
# name suffixes with `.col1` and `.col2`:
pigs \%>\%
  split_by_parens(.col1 = "beta", .col2 = "se")

pigs \%>\%
  split_by_parens(.transform = TRUE,
  .col1 = "beta", .col2 = "se")
}
\seealso{
\code{before_parens()} and \code{inside_parens()} take a string vector and
extract values from the respective position. These two functions are mapped
within \verb{split_by_parens().}
}
