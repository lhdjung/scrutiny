% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data-frame-predicates.R
\name{is_map_df}
\alias{is_map_df}
\alias{is_map_basic_df}
\alias{is_map_seq_df}
\alias{is_map_total_n_df}
\title{Is an object a consistency test output tibble?}
\usage{
is_map_df(x)

is_map_basic_df(x)

is_map_seq_df(x)

is_map_total_n_df(x)
}
\arguments{
\item{x}{Object to be tested.}
}
\value{
Boolean (length 1).
}
\description{
\itemize{
\item \code{is_map_df()} tests whether an object is the output of a scrutiny-style
mapper function for consistency tests, like \code{grim_map()}. These functions
also include those produced by \code{function_map()}, \code{function_map_seq()}, and
\code{function_map_total_n()}.
\item \code{is_map_basic_df()} is a variant of \code{is_map_df()} that tests if an object
is the output of a "basic" mapper function. This does not include functions
produced by \code{function_map_seq()} or \code{function_map_total_n()}.
\item \code{is_map_seq_df()} tests whether an object is the output of a function that
was made by \code{function_map_seq()}.
\item \code{is_map_total_n_df()} tests whether an object is the output of a function
that was made by \code{function_map_total_n()}.
}
}
\examples{
# Example test output:
df1 <- grim_map(pigs1)
df2 <- grim_map_seq(pigs1)
df3 <- grim_map_total_n(tibble::tribble(
  ~x1,    ~x2,   ~n,
  "3.43", "5.28", 90,
  "2.97", "4.42", 103
))

# All three tibbles are mapper output:
is_map_df(df1)
is_map_df(df2)
is_map_df(df3)

# However, only `df1` is the output of a
# basic mapper...
is_map_basic_df(df1)
is_map_basic_df(df2)
is_map_basic_df(df3)

# ...only `df2` is the output of a
# sequence mapper...
is_map_seq_df(df1)
is_map_seq_df(df2)
is_map_seq_df(df3)

# ...and only `df3` is the output of a
# total-n mapper:
is_map_total_n_df(df1)
is_map_total_n_df(df2)
is_map_total_n_df(df3)
}
