% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grim-map-disperse.R
\name{grim_map_disperse}
\alias{grim_map_disperse}
\title{GRIM-testing with varying group sizes}
\usage{
grim_map_disperse(
  data,
  dispersion = 0:5,
  n_min = 1,
  n_max = NULL,
  x1 = NULL,
  x2 = NULL,
  show_all = FALSE,
  items = 1,
  percent = FALSE,
  show_rec = FALSE,
  show_prob = FALSE,
  rounding = "up_or_down",
  threshold = 5,
  symmetric = FALSE,
  tolerance = .Machine$double.eps^0.5,
  extra = Inf
)
}
\arguments{
\item{data}{Data frame with string columns \code{x1} and \code{x2}, and numeric column
\code{n}. The first two are group mean or percentage values with unknown group
sizes, and \code{n} is a number around half the total sample size. The function
will go up and down from \code{n} to create hypothetical group sizes.

It is not very important whether a value is in \code{x1} or in \code{x2} because,
after the first round of tests, the function switches roles between \code{x1}
and \code{x2}, and reports the outcomes both ways.}

\item{dispersion}{Numeric. Steps up and down from the \code{n} values. Default is
\code{0:5}, i.e., \code{n} itself plus five steps up and down.}

\item{n_min}{Numeric. Minimal group size. Default is 1.}

\item{n_max}{Numeric. Maximal group size. Default is \code{NULL}, i.e., no
maximum.}

\item{x1, x2}{Optionally, specify which columns in \code{data} contain the mean or
percentage values. If not specified here, \code{data} itself needs to contain
columns by those names. Default is \code{NULL}.}

\item{show_all}{Boolean. If set to \code{TRUE}, the output is a list of tibbles
with detailed analyses. Default is \code{FALSE}, so that only a single tibble
with summaries is shown.}

\item{items, percent, show_rec, show_prob, rounding, threshold, symmetric, tolerance, extra}{Arguments passed down to \code{grim_map()}.}
}
\value{
A tibble with summary data:
\itemize{
\item \code{x1}, \code{x2}, and \code{n} are the inputs.
\item \code{hits_total} is the total number of scenarios in which both \verb{x*} values
are GRIM-consistent. Each scenario consists of two \code{n} values in the
specified \code{dispersion} range tested against one \code{x1} and one \code{x2} value.
Which one of the \verb{x*} values is entered as high or low does not matter
because the tests go both ways.
\item \code{hits_forth} is the number of scenarios with both \verb{x*} values consistent
corresponding to \code{x1} for low \code{n} and \code{x2} for high \code{n} values.
\item \code{hits_back}, then, is the number of scenarios in which both of the switched
(role-reversed) \verb{x*} values are consistent.
}

If \code{show_all} is \code{TRUE}, this tibble (index \verb{[[1]]}) is part of a list of
tibbles in which the other tibbles contain the detailed results.

In particular, the first pair of detailed tibbles (index \verb{[[2]]}) contains
test results corresponding to the original \code{x1} and \code{x2} columns. The second
pair (index \verb{[[3]]}) has the values of \code{x1} and \code{x2} switched. The summary
tibble at the top reports their results as \code{hits_forth} and \code{hits_back},
respectively, and adds these two up to \code{hits_total}.
}
\description{
When reporting group means, some published studies only report
the total sample size but no group sizes corresponding to each mean.
However, group sizes are crucial for GRIM-testing.

In the two-groups case, \code{grim_map_disperse()} helps in these ways:
\itemize{
\item It creates hypothetical group sizes by incrementally moving up and down
from a user-specified number around half the total sample size. For example,
with a total sample size of 40, it will go from 20 to 19 and 21, then to 18
and 22, etc.
\item It GRIM-tests all of these values together with the group means.
\item It reports the number of scenarios in which both "dispersed" hypothetical
group sizes are GRIM-consistent with the group means.
}

All of this works with one or more total sample sizes at a time, each
represented by a number around its half. Of course, it is also sensible to
test multiple of such numbers with a single set of group means.
}
\examples{
# Run `grim_map_disperse()` on data like these:
df <- tibble::tibble(
  x1 = runif(3, 2, 8) \%>\% round(2) \%>\% restore_zeros(),
  x2 = runif(3, 2, 8) \%>\% round(2) \%>\% restore_zeros(),
  n  = runif(3, 30, 60) \%>\% round()
)

# The `hits_total` column shows all scenarios in
# which both divergent `n` values are GRIM-consistent
# with the `x*` values when paired with them both ways:
grim_map_disperse(data = df)

# By default (`dispersion = 0:5`), the function goes
# five steps up and down from `n`. If this sequence
# gets longer, the number of hits tends to increase:
grim_map_disperse(data = df, dispersion = 0:10)

# Get all the details with `show_all = TRUE`:
grim_map_disperse(data = df, show_all = TRUE)
}
\references{
Bauer, P. J., & Francis, G. (2021). Expression of Concern: Is It
Light or Dark? Recalling Moral Behavior Changes Perception of Brightness.
\emph{Psychological Science}, 32(12), 2042–2043.
https://doi.org/10.1177/09567976211058727

Brown, N. J. L., & Heathers, J. A. J. (2017). The GRIM Test: A Simple
Technique Detects Numerous Anomalies in the Reporting of Results in
Psychology. \emph{Social Psychological and Personality Science}, 8(4), 363–369.
https://doi.org/10.1177/1948550616673876
}
\seealso{
\code{grim_map()}, \code{disperse()}
}
