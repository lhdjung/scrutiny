% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/disperse.R
\name{disperse}
\alias{disperse}
\title{Vary hypothetical group sizes}
\usage{
disperse(n, dispersion = 0:5, n_min = 1, n_max = NULL, x1 = NA, x2 = NA)
}
\arguments{
\item{n}{Numeric. Number from which to go up and down. This might be half the
total sample size if that number is even. You may want to choose a number
around half if it is odd.}

\item{dispersion}{Numeric. Vector that determines the steps up and down from
\code{n}. Default is \code{0:5}.}

\item{n_min}{Numeric. Minimal group size. Default is \code{1}.}

\item{n_max}{Numeric. Maximal group size. Default is \code{NULL}, i.e., no
maximum.}

\item{x1, x2}{Optionally, combine the low and high hypothetical group sizes
with other values, such as means. Default is \code{NA}.}
}
\value{
A tibble (data frame).
}
\description{
Some published studies only report a total sample size but no
group sizes. However, group sizes are crucial for procedures such as
\href{https://lhdjung.github.io/scrutiny/articles/grim.html}{GRIM}. Call
\code{disperse()} to get a bird's-eye view of possible group sizes that all add
up to the total sample size.

For convenience, mean (or other) values corresponding to the hypothetical
sample sizes can be added. The output will then be testable with functions
like \code{grim_map()}.
}
\details{
If any group size is less than \code{n_min} or greater than \code{n_max}, it
is removed. The corresponding size of the other group is also removed.

In case you specify \code{x1} and \code{x2}, it makes sense to swap their
specifications and run \code{disperse()} again, because it is not known which
value corresponds to which group. \code{grim_map_disperse()} does that
automatically.
}
\examples{
# For a total sample size of 40,
# you may set `n` to `20`:
disperse(n = 20)

# Specify `dispersion` to control
# the steps up and down from `n`:
disperse(n = 20, dispersion = c(3, 6, 10))

# Specify `x1` and `x2` to add
# corresponding values, such as means:
disperse(n = 20, x1 = "4.71", x2 = "5.3")
}
\seealso{
\code{grim_map_disperse()}, \code{seq_distance_df()}
}
